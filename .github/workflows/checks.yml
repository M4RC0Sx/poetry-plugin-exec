name: checks
on:
  push:
    branches:
      - develop
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  run-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
        #----------------------------------------------
        #       Check-out repo
        #----------------------------------------------
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        
        #----------------------------------------------
        #       Install Python and Poetry
        #       It uses .python-version file
        #----------------------------------------------
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: 3.9
          id: setup-python
        - name: Install Poetry
          uses: snok/install-poetry@v1
          with: 
            version: 2.1.1
            virtualenvs-create: true
            virtualenvs-in-project: false
            virtualenvs-path: ~/venvs
            installer-parallel: true

        #----------------------------------------------
        #       Cache venv
        #----------------------------------------------
        - name: Cache venv
          uses: actions/cache@v4
          id: cached-poetry-dependencies
          with:
            path: ~/venvs
            key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        
        #----------------------------------------------
        #       Install dependencies if cache miss
        #----------------------------------------------
        - name: Install dependencies
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
          run: poetry install --no-interaction --no-root

        #----------------------------------------------
        #       Run linting/fromat checks
        #----------------------------------------------
        - name: Run linting & format checks
          run: poetry run ruff check
        
        #----------------------------------------------
        #       Run typing checks
        #----------------------------------------------
        - name: Run typing checks
          run: poetry run mypy
        
        #----------------------------------------------
        #       Run tests
        #----------------------------------------------
        # - name: Run tests
        #   run: poetry run pytest
          